{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user-auth.service\";\nexport class UserService {\n  constructor(httpclient, userAuthService) {\n    this.httpclient = httpclient;\n    this.userAuthService = userAuthService;\n    this.PATH_OF_API = 'http://localhost:9090';\n    this.requestHeader = new HttpHeaders({\n      'No-Auth': 'True'\n    });\n  }\n  login(loginData) {\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\n      headers: this.requestHeader\n    });\n  }\n  forUser() {\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\n      responseType: 'text'\n    });\n  }\n  forAdmin() {\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\n      responseType: 'text'\n    });\n  }\n  roleMatch(allowedRoles) {\n    let isMatch = false;\n    const userRoles = this.userAuthService.getRoles();\n    if (userRoles != null && userRoles) {\n      for (let i = 0; i < userRoles.length; i++) {\n        for (let j = 0; j < allowedRoles.length; j++) {\n          if (userRoles[i].roleName === allowedRoles[j]) {\n            isMatch = true;\n            return isMatch;\n          }\n        }\n      }\n    }\n    return isMatch;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserAuthService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","UserService","constructor","httpclient","userAuthService","PATH_OF_API","requestHeader","login","loginData","post","headers","forUser","get","responseType","forAdmin","roleMatch","allowedRoles","isMatch","userRoles","getRoles","i","length","j","roleName","i0","ɵɵinject","i1","HttpClient","i2","UserAuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vinod\\OneDrive\\Desktop\\Angular_Project\\jwt_ui\\src\\app\\_services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserAuthService } from './user-auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  PATH_OF_API = 'http://localhost:9090';\n\n  requestHeader = new HttpHeaders({ 'No-Auth': 'True' });\n  constructor(\n    private httpclient: HttpClient,\n    private userAuthService: UserAuthService\n  ) {}\n\n  public login(loginData :any) {\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\n      headers: this.requestHeader,\n    });\n  }\n\n  public forUser() {\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\n      responseType: 'text',\n    });\n  }\n\n\n  public forAdmin() {\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\n      responseType: 'text',\n    });\n  }\n\n  public roleMatch(allowedRoles: string[]): boolean{\n    let isMatch = false;\n    const userRoles: any = this.userAuthService.getRoles();\n\n    if (userRoles != null && userRoles) {\n      for (let i = 0; i < userRoles.length; i++) {\n        for (let j = 0; j < allowedRoles.length; j++) {\n          if (userRoles[i].roleName === allowedRoles[j]) {\n            isMatch = true;\n            return isMatch;\n          }\n        }\n      }\n    }\n    return isMatch;\n  }\n}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,WAAW;EAItBC,YACUC,UAAsB,EACtBC,eAAgC;IADhC,KAAAD,UAAU,GAAVA,UAAU;IACV,KAAAC,eAAe,GAAfA,eAAe;IALzB,KAAAC,WAAW,GAAG,uBAAuB;IAErC,KAAAC,aAAa,GAAG,IAAIN,WAAW,CAAC;MAAE,SAAS,EAAE;IAAM,CAAE,CAAC;EAInD;EAEIO,KAAKA,CAACC,SAAc;IACzB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,IAAI,CAACJ,WAAW,GAAG,eAAe,EAAEG,SAAS,EAAE;MACzEE,OAAO,EAAE,IAAI,CAACJ;KACf,CAAC;EACJ;EAEOK,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAC,IAAI,CAACP,WAAW,GAAG,UAAU,EAAE;MACxDQ,YAAY,EAAE;KACf,CAAC;EACJ;EAGOC,QAAQA,CAAA;IACb,OAAO,IAAI,CAACX,UAAU,CAACS,GAAG,CAAC,IAAI,CAACP,WAAW,GAAG,WAAW,EAAE;MACzDQ,YAAY,EAAE;KACf,CAAC;EACJ;EAEOE,SAASA,CAACC,YAAsB;IACrC,IAAIC,OAAO,GAAG,KAAK;IACnB,MAAMC,SAAS,GAAQ,IAAI,CAACd,eAAe,CAACe,QAAQ,EAAE;IAEtD,IAAID,SAAS,IAAI,IAAI,IAAIA,SAAS,EAAE;MAClC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC5C,IAAIJ,SAAS,CAACE,CAAC,CAAC,CAACG,QAAQ,KAAKP,YAAY,CAACM,CAAC,CAAC,EAAE;YAC7CL,OAAO,GAAG,IAAI;YACd,OAAOA,OAAO;;;;;IAKtB,OAAOA,OAAO;EAChB;;AA3CWhB,WAAW,C;mBAAXA,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}