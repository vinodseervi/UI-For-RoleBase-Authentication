{"ast":null,"code":"import { HttpHandler } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.PATH_OF_API = \"http://localhost:9090\";\n    this.requestHeader = new HttpHandler({\n      \"No-Auth\": \"True\"\n    });\n  }\n  login(loginData) {\n    return this.httpclient.post(this.PATH_OF_API + \"/authenticate\", loginData, {\n      headers: this.requestHeader\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHandler","UserService","constructor","httpclient","PATH_OF_API","requestHeader","login","loginData","post","headers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vinod\\OneDrive\\Desktop\\Angular_Project\\jwt_ui\\src\\app\\_services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  PATH_OF_API = \"http://localhost:9090\"\n  requestHeader = new HttpHandler(\n    {\"No-Auth\":\"True\"}\n  );\n\n  constructor(private httpclient: HttpClient) { }\n\n  public login(loginData){\n    return this.httpclient.post(this.PATH_OF_API + \"/authenticate\", loginData, {headers : this.requestHeader})\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAL9B,KAAAC,WAAW,GAAG,uBAAuB;IACrC,KAAAC,aAAa,GAAG,IAAIL,WAAW,CAC7B;MAAC,SAAS,EAAC;IAAM,CAAC,CACnB;EAE6C;EAEvCM,KAAKA,CAACC,SAAS;IACpB,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC,IAAI,CAACJ,WAAW,GAAG,eAAe,EAAEG,SAAS,EAAE;MAACE,OAAO,EAAG,IAAI,CAACJ;IAAa,CAAC,CAAC;EAC5G;;AAXWJ,WAAW,C;mBAAXA,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXZ,WAAW,C;SAAXA,WAAW;EAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}